# Kubernetes ReplicaSet Configuration Example
# ======================================

# What is a ReplicaSet?
# -------------------
# A ReplicaSet ensures that a specified number of pod replicas are running at any given time.
# It's the next-generation version of the ReplicationController, with more flexible pod selection.

# Key Differences from ReplicationController:
# --------------------------------------
# 1. More expressive pod selectors (matchLabels, matchExpressions)
# 2. Recommended over ReplicationController for new deployments
# 3. Used by Deployments for managing pod replicas

# Common kubectl Commands for ReplicaSet Management
# --------------------------------------------
# Create and List:
#   kubectl apply -f nginx-set.replica.yaml    # Create/update ReplicaSet
#   kubectl get replicasets                    # List all ReplicaSets
#   kubectl get rs                             # Short form
#
# ReplicaSet Information:
#   kubectl describe rs nginx-replica          # Show detailed information
#   kubectl get rs nginx-replica -o yaml       # Get configuration in YAML
#
# Scaling Operations:
#   kubectl scale rs nginx-replica --replicas=5  # Scale to 5 replicas
#   kubectl autoscale rs nginx-replica --min=2 --max=5  # Auto-scaling
#
# Pod Management:
#   kubectl get pods -l app=nginx              # List pods managed by RS
#   kubectl delete rs nginx-replica            # Delete RS and its pods

# Best Practices:
# -------------
# 1. Use Deployments instead of direct ReplicaSet management
# 2. Set appropriate replica count based on load
# 3. Use meaningful labels and selectors
# 4. Implement resource limits and requests
# 5. Use specific image tags

# Scaling Methods:
# --------------
# 1. Declarative: Update replicas in YAML and apply
#    kubectl apply -f nginx-set.replica.yaml
#
# 2. Imperative: Use kubectl scale command
#    kubectl scale rs nginx-replica --replicas=5
#
# 3. Horizontal Pod Autoscaling (HPA)
#    kubectl autoscale rs nginx-replica --min=2 --max=5 --cpu-percent=80

# ReplicaSet Configuration
# =====================

apiVersion: apps/v1 # API version for ReplicaSet
kind: ReplicaSet # Resource type

metadata:
  name: nginx-replica # ReplicaSet name
  labels:
    app: nginx # Labels for the ReplicaSet itself
    env: prod
    type: replica-set

spec:
  replicas: 3 # Desired number of pod replicas

  selector: # Pod selector - must match template labels
    matchLabels:
      app: nginx
      env: prod
    # Optional: More advanced selection criteria
    # matchExpressions:
    # - key: app
    #   operator: In
    #   values: ["nginx"]

  template: # Pod template
    metadata:
      labels: # Must match selector.matchLabels
        app: nginx
        env: prod
    spec:
      containers:
        - name: nginx
          image: nginx:1.25.3 # Specific version instead of latest

          ports:
            - containerPort: 80
# Note: While ReplicaSets can be used directly, it's recommended to use
# Deployments which provide additional features like rolling updates and rollbacks.
# Deployments manage ReplicaSets automatically.
